#!/usr/bin/env bash

set -o nounset -o pipefail -o errexit

source "$(dirname "$0")/../lib/utils.sh"

## Keys from https://github.com/nodejs/node/#release-keys
KEYS="4ED778F539E3634C779C87C6D7062848A1AB005C \
      94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \
      74F12602B6F1C4E913FAA37AD3A89613643B6201 \
      71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \
      8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \
      C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
      C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C \
      DD8F2338BAE7501E3DD5AC78C273792F7D83545D \
      A48C2BEE680E841632CD4E44F07496B3EB3C1762 \
      108F52B48DB57BB0CC439B2997B01419BD92F80A \
      B9E2F5981AA6E0CD28160D9FF13993A75599653C"

SERVERS="ha.pool.sks-keyservers.net
         p80.pool.sks-keyservers.net:80 \
         ipv4.pool.sks-keyservers.net \
         keyserver.ubuntu.com
         keyserver.ubuntu.com:80 \
         pgp.mit.edu
         pgp.mit.edu:80"

OPTIONS=""
if [ -n "${http_proxy:-}" ];
  then OPTIONS="--keyserver-options http-proxy=$http_proxy";
fi

gnugp_verify_command_name="$(command -v gpg gpg2 | head -n 1 || :)"

if [ -z "${gnugp_verify_command_name}" ]; then
  echo 'gpg or gpg2 command not found!' >&2
  echo "You must install GnuPG to import release team keys: https://www.gnupg.org/" >&2
  exit 1
fi

for key in $KEYS; do
    for server in $SERVERS; do
      $gnugp_verify_command_name --with-colons --no-default-keyring --keyring ${ASDF_NODEJS_KEYRING} -k $key > /dev/null 2>&1 || \
      $gnugp_verify_command_name --no-default-keyring --keyring ${ASDF_NODEJS_KEYRING} --no-tty --keyserver "hkp://$server" $OPTIONS --display-charset utf-8 --recv-keys "$key" && break
    done
done
