#!/usr/bin/env bash

set -o nounset -o pipefail -o errexit

# shellcheck source=../lib/utils.sh
source "$(dirname "$0")/../lib/utils.sh"
ensure_node_build_setup



install_nodejs() {
  local install_type="$1"
  local version="$2"
  local install_path="$3"
  local tmp_download_dir="$4"

  if [ "$install_type" != "version" ]; then
    echoerr "Cannot install specific ref from source, sorry."
    echoerr "For a list of available versions, see \`asdf list-all nodejs\`"
    rm -rf "$install_path"
    exit 1
  fi

  # Disabled for now, since gotta figure out
  # https://github.com/nodenv/node-build#applying-patches
  # if [[ -n "${NODE_APPLY_PATCHES:-}" ]]; then
  #   patches=" --patch $NODE_APPLY_PATCHES "
  # fi

  export NODE_BUILD_BUILD_PATH="${tmp_download_dir:-"$NODE_BUILD_BUILD_PATH"}"
  local command="$(node_build_executable) "$version" "$install_path" "
  echo "$command"
  echo $($command)

  mkdir -p "$install_path/.npm/lib/node_modules/.hooks"
  cp "$(asdf_nodejs_plugin_path)"/npm-hooks/* "$install_path/.npm/lib/node_modules/.hooks/"
  chmod +x "$install_path"/.npm/lib/node_modules/.hooks/*

}

install_default_npm_packages() {
  local default_npm_packages="${ASDF_NPM_DEFAULT_PACKAGES_FILE:=$HOME/.default-npm-packages}"

  if [ ! -f "$default_npm_packages" ]; then return; fi

  cat "$default_npm_packages" | while read -r name; do
    echo -ne "\nInstalling \033[33m${name}\033[39m npm package... "
    source "$(dirname "$0")/exec-env"
    PATH="$ASDF_INSTALL_PATH/bin:$PATH" npm install -g "$name" > /dev/null 2>&1 && rc=$? || rc=$?
    if [[ $rc -eq 0 ]]; then
      echo -e "\033[32mSUCCESS\033[39m"
    else
      echo -e "\033[31mFAIL\033[39m"
    fi
  done
}



 install_nodejs "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH" "$ASDF_DOWNLOAD_PATH"
 ASDF_SKIP_RESHIM=1 install_default_npm_packages

 asdf reshim "$(plugin_name)" "$ASDF_INSTALL_VERSION"
